'From Smalltalk 5.4hXM on 23 July 1979 at 4:00:28 pm.'\g"EqDictionary"l15000z20000\f5bgClass new title: 'EqDictionary'	subclassof: Dictionary	fields: ''	declare: 'fieldProperties ';	asFollows\f5bgThis class has not yet been commented\igAs yet unclassified\f5bgfind: obj | i	"index if found, else false"	[i _ self findornil: obj.	objectsiobj[i] false]\gb10Bfindorerror: name | i	[i _ self findornil: name.	objectsiname [i]	"allow the user to put a correct value into i"	user notify: name asString+' cannot be found'. i]\gb18B55i46Ifindorinsert: obj | i		"insert if not found, "	[i _ self findornil: obj.	objectsiobj[i]  "found it"	self sparse[objectsi _ obj. i]  "insert if room"	self growto: objects length*2.	"grow"	self findorinsert: obj "and insert"]\gb18B5i23I49i10I37i16I33i6I26i12Ifindornil: obj | i loc  "index if found or available slot"	["like HashSet findornil, but uses asOop instead of hash,		and  instead of ="	loc _ obj asOop\objects length.	for i to: objects length do		[loc _ [loc=objects length[1] loc+1].			objectsloc  nil [loc]		objectsloc  obj [loc]]	1 "table full - caller must check for hit"]\gb15B10i33I5i76Ihas: obj	[objects(self findornil: obj)obj]\gb10Binvert: obj | i	[for i to: values length do		[valuesiobj [objectsi]]	false]\gb12B\gSystemOrganization classify: EqDictionary under: 'ThingLab Dictionaries'.\g"MultiEntryDict"l15000z20000\f5bgClass new title: 'MultiEntryDict'	subclassof: Dictionary	fields: ''	declare: '';	asFollows\f5bgMultiEntryDicts are like dictionaries, but have a vector of values for each object, thus allowing multiple entries.\igAs yet unclassified\f5bgallentries | set name obj   "return a vector of all entries with no duplicates"	[set_HashSet init.	for name from: self do 		[for obj from: selfname do			[set insert: obj]].	 set contents]\gb11B18i49Idelete: name entry: value | x   "delete an entry - missing entry is ok"	[x_self lookup: name.	xfalse[]	x_x delete: value.	x length=0  [self delete: name]	self insert: name with: x]\gb26B6i39Iempty | x	[for x from: objects do [nilx[] false].	true]\gb6Binsert: name entry: value | vec i   "add a new entry"	[vec_self lookupVec: name.  i_vec find: value.	 [i>0[veci_value]  vec_vec , value].	self insert: name with: vec]\gb26B11i15IlookupVec: name | x   "always return a vector"	[x _ self find: name  [valuesx] Vector new: 0]\gb16B7i22Imerge: other | new name vec obj	[new _ self class init.	 for name from: self do		[vec _ self lookupVec: name.		 for obj from: vec do			[new insert: name entry: obj]].	 for name from: other do		[vec _ other lookupVec: name.		 for obj from: vec do			[new insert: name entry: obj]].	 new]\gb13B\gSystemOrganization classify: MultiEntryDict under: 'ThingLab Dictionaries'.\g"SetOfPaths"l15000z20000\f5bgClass new title: 'SetOfPaths'	subclassof: Set	fields: ''	declare: 'instancePathsDict merges fieldProperties constraints ';	asFollows\f5bgThis class has not yet been commented\igAs yet unclassified\f5bgelements\gbexcluding: t | s p owner	["Crock!  This should be done at compile time!"	owner_user topLabWindow selectionPane currentObject.	s_SetOfPaths default.	for p from: self do		[t(p applyTo: owner)[]		s insert: p].	s]\gb13B15i44Iinsert: t	[(self find: t)>0[]	self add: t]\gb11BmergeWith: other | s p	[s_SetOfPaths default.	for p from: self do [s insert: p].	for p from: other do [s insert: p].	s]\gb17BrelocatePaths: prefix | paths p  "prefix all my paths with prefix"	[paths_self contents.	self default.	for p from: paths do		[self insert: (prefix concat: p)]]\gb22B12i25u6IUsum | owner s p	["All the objects pointed to by my paths should be numbers.		Return their sum.  Crock!  This should be expanded at compile time!"	owner_user topLabWindow selectionPane currentObject.	s_0.0.	for p from: self do		[s_s+(p applyTo: owner)].	s]\gb4B15i127I\gSystemOrganization classify: SetOfPaths under: 'ThingLab Dictionaries'.\g