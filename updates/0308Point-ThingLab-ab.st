'From Smalltalk 5.4hXM on 23 July 1979 at 3:53:17 pm.'\gPoint asFollows\f5bgThingLab\f5bgadd: delta	[x_x+delta x.  y_y+delta y]\gb12BcanFiloutContents [true]\gb18BcontentsCodeTo: strm prefix: prefix	[prefix codeTo: strm.	strm append: ' copyFrom: '; print: self; append: '.'; cr]\gb37BcopyFrom: pt	[x_pt x.  y_pt y]\gb14Bdisplayat: pt effect: effect clippedBy: clipRect | r	[r _ Rectangle new origin: pt+self-2 extent: 55.	 r bitsFromString: 'wÿÿÿÿÿÿÿwÿ' mode: effect clippedBy: clipRect]\gb49Bdistance: p | dx dy  "the real distance, as opposed to Manahattan dist:"	[dx_x asFloat-p x asFloat.  dy_y asFloat-p y asFloat.	((dx*dx) + (dy*dy)) sqrt]\gb12B10i49IexpandFixedLocation: message queue: queue | m	["expand this into a message that fixes me"	m_Message new		context: message context 		receiver: message receiver		constraint: message constraint owner: message owner		keywords: ('fixed') arguments: message arguments		uniqueState: message uniqueState		referenceOnly: message referenceOnly		compileTimeOnly: message compileTimeOnly.	queue insert: m]\gb42B7i40IexpandMove: message queue: queue	[queue insert: message]\gb34BexpandScale: message queue: queue	[queue insert: message]\gb35BframeOrNil [self-4 rect: self+5]\gb11Bhas: pt	[pt(self-self hitgap) and pt(self+self hitgap)]\gb9BlabInit  "make Point into a ThingLab thing"		| pt	[pt_Point prototype.	pt primitives: 'x y'.	pt x: 10 y: 10]\gb9B1i32IlargestRelaxablePart: path prefixPath: prefix	["return a path to the largest of my subparts that can be relaxed.		I am relaxable."	prefix]\gb47B2i82Iline: pt	[Line new point1: self point2: pt]\gb10Blocation\gbmakeIntoFloat	[x_x asFloat.  y_y asFloat]\gb15BmergeWith: other	[othernil or other classPoint		["take on my state as the result of the merge"]	user notify: 'classes not compatable for merging']\gb18B38i43Imoveby: delta 	[x_x+delta x.  y_y+delta y]\gb16Bprinttableoffields: strm 	[self classPoint[strm print: self]	super printtableoffields: strm]\gb27Brotate: sin cos: cos 	[Point new x: ((cos*x) + (sin*y)) round			y: ((cos*y) - (sin*x)) round]\gb23Bscaleby: s	[x _ [x is: Integer[(s*x) asInteger] x*s].	y _ [y is: Integer[(s*y) asInteger] y*s]]\gb12Bshowlabel: window\gbshowpicture: window 	[window blt: 'wÿÿÿÿÿÿÿwÿ' to: self-2 extent: 55]\gb22Bsub: delta	[x_x-delta x.  y_y-delta y]\gb12BundoMakeIntoFloat	[x_x round.  y_y round]\gb19B\g