'From Smalltalk 5.5bXM July 4 on 25 July 1979 at 11:43:03 am.'\g"ActionPane"l15000z20000\f5bgClass new title: 'ActionPane'	subclassof: ListPane	fields: 'owner toolClasses'	declare: '';	asFollows\f5bgI present a list of ways in which an object can be used as a tool to act on a network.\igInitialization\f5bgowner: owner\gbListPane protocol\f5bgclose	[owner_nil.  super close]\gb7Bselected	[NormalCursor topage1.	user waitnobug  "to prevent re-selecting on same bug"]\gb10B41i35Iupdate | object format vec i	[object_owner selectionPane currentObject.	format_owner formatPane format.	objectnil or formatnil[toolClasses_().  self of: ()]	toolClasses_object editingToolsFor: format.	vec_Vector new: toolClasses length.	for i to: vec length do		[veci_(toolClassesi) new action].	self of: vec]\gb7BThingLab protocol\f5bgaction	[selection=0[nil]	listselection]\gb8BtoolClass	[selection=0[nil]	toolClassesselection]\gb11B\gSystemOrganization classify: ActionPane under: 'ThingLab Windows'.\g"Format"l15000z20000\f5bgClass new title: 'Format'	subclassof: Object	fields: 'name  "descriptive string"		showSelector  "selector for method for showing"		editSelector  "selector for method for editing"		paneSpecies  "class of pane for showing in my format" '	declare: 'merges ';	asFollows\f5bgThis class has not yet been commented\igInitialization\f5bgname: name | squished  "make up default selectors; choose paneSpecies"	[squished_self squishedName.	showSelector_('show'+squished+':') unique.	editSelector_('edit'+squished+':') unique.	name='icon' or name='labeled icon'[paneSpecies_PicturePane]	paneSpecies_CodePane]\gb11B12i47Iname: name showSelector: showSelector editSelector: editSelector paneSpecies: paneSpecies\gbAccess to parts\f5bgeditSelector [editSelector]\gb13Bname [name]\gb5BpaneSpecies [paneSpecies]\gb12BshowSelector [showSelector]\gb13BsquishedName | strm char  "name with all non-alphabetic chars removed"	[strm_Stream default.	for char from: name do [char isletter[strm next_char]].	strm contents]\gb13B13i44IClassification\f5bgisPicture	[(showSelectorshowpicture: or showSelectorshowlabeledpicture:)		or showSelectorshowprototypespicture: ]\gb11BCopying\f5bgrecopy  "kludge to keep from copying class"	[self copy]\gb8B1i33Irecopy: dict  "kludge to keep from copying class"	[self copy]\gb14B1i33I\gSystemOrganization classify: Format under: 'ThingLab Windows'.\g"FormatPane"l15000z20000\f5bgClass new title: 'FormatPane'	subclassof: ListPane	fields: 'owner formats'	declare: '';	asFollows\f5bgI am a list pane that displays all the ways in which a prototype can depict itself.\igInitialization\f5bgowner: owner\gbupdate | obj i vec  "update my format list"	[obj_owner selectionPane currentObject.	objnil[self of: ()]	formats_obj formats.	"make my displayed list be the names from the formats"	vec_Vector new: formats length.	for i to: formats length do		[veci_(formatsi) name].	self of: vec]\gb7B14i21I91i52IWindow protocol\f5bgenter		["be sure I am up to date"	 [formatsowner selectionPane currentObject formats[]		window outline. self update].	super enter]\gb8B2i23IListPane protocol\f5bgclose	[owner_nil.  super close]\gb7Bdeselected [self selected]\gb11Bselected	[owner actionPane update.  owner toolPane update.	owner picturePane show]\gb10BThingLab protocol\f5bgeditSelector   "return a selector for invoking an edit method"	[selection=0[editdefault:]	(formatsselection) editSelector]\gb15B1i45Iformat	[selection=0[nil]	formatsselection]\gb8BshowSelector   "return a selector for invoking a show method"	[selection=0[showdefault:]	(formatsselection) showSelector]\gb15B1i44I\gSystemOrganization classify: FormatPane under: 'ThingLab Windows'.\g"IndentingStream"l15000z20000\f5bgClass new title: 'IndentingStream'	subclassof: Stream	fields: 'ntabs'	declare: '';	asFollows\f5bgAn indenting stream appends some tabs after each cr\igmisc\f5bgcr | i	[self next_015.	for i to: ntabs do [self next_011]]\gb3Bindent [ntabs_ntabs+1]\gb7Bof: a [super of: a.  ntabs_0]\gb6Bof: a from: p to: l [super of: a from: p to: l.  ntabs_0]\gb20Breset [super reset.  ntabs_0]\gb6Bunindent [ntabs_ntabs-1]\gb9B\gSystemOrganization classify: IndentingStream under: 'ThingLab Windows'.\g"PicturePane"l15000z20000\f5bgClass new title: 'PicturePane'	subclassof: Window	fields: 'owner  "the window of which I am a pane"		contents   "the object I am displaying"		turtle   "a turtle that lives in my frame"		textEditor   "a CodePane for showing and editing text"		strm   "a stream for accumulating a paragraph to be shown"		scrollBar '	declare: 'text ';	asFollows\f5bgI am a window that shows a Thinglab object on the screen in a given format.\igInitialization\f5bgclassInit	[text_Textframe new para: '' asParagraph frame: (00 rect: 100100)]\gb11Binit	[turtle_Turtle init.	strm_IndentingStream default.	scrollBar_ScrollBar new]\gb6Bowner: owner\gbAccess to parts\f5bgasStream [strm]\gb9BasTurtle [turtle]\gb9Bcontents [contents]\gb9BWindow protocol\f5bgclose	[owner_contents_textEditor_nil.	scrollBar close]\gb7Beachtime	[textEditornil		[frame has: user mp[self startupTool]  false]	textEditor eachtime]\gb10Benter	[textEditornil[scrollBar show]	textEditor enter]\gb7Bframe_frame	[turtle frame: frame.	scrollBar on: frame from: self.	niltextEditor[]	textEditor frame_frame]\gb13Bkbd	[textEditornil[super kbd]	textEditor kbd]\gb5Bkeyset	[textEditornil[super keyset]	textEditor keyset]\gb8Bleave	[textEditornil[scrollBar hide]	textEditor leave]\gb7Boutline	[frame outline: 1]\gb9Boutside	[textEditornil[scrollBar startup]	textEditor outside]\gb9Bpicked	[frame has: user mp]\gb8BscrollPos [0.0]\gb10BscrollTo: y []\gb12BscrollUp: y []\gb12Bshow	[frame clear: white.  strm reset.  textEditor_nil.	contentsnil[]	contents perform: owner formatPane showSelector with: self.	strm emptyfalse[self showParagraph: strm contents asParagraph]]\gb6Bupdate [contents_owner selectionPane currentObject]\gb7Bwindowenter [self outline; show]\gb12Bwindowleave	[textEditornil[]  textEditor windowleave]\gb13Byellowbug   "invoke an editor"	[textEditornil[frame flash]	textEditor yellowbug]\gb12Bi18ICodePane protocol\f5bgcompile: para | superClass vec name fields cl fieldProperties i	[owner formatPane showSelectorshowassavefile: 		[contents sourceCode_para];	 showsubclasstemplate: 		["make a new object - input should be of the form			NameOfClass  'optional fields' "		superClass_Smalltalkowner selectionPane currentName.		vec_para asStream asVector.		name_vec1.		fields_[vec length>1[vec2]			superClass instsize16['']			'part1 part2 part3 part4 part5 part6 part7 part8			part9 part10 part11 part12 part13 part14 part15 part16'].		Class new title: name asString			subclassof: superClass			fields: fields			declare: ''.		SystemOrganization classify: name under: 'Prototype Classes'.		cl_Smalltalkname.		cl classvars init.  cl md close.		"initialize types of new fields to spare (also create prototype)"		fieldProperties _ cl prototype fieldProperties.		for i from: superClass instsize+1 to: cl instsize do			[(fieldPropertiesi) type_spare; named_false].		"leave text editing mode, and update the selection pane"		owner selectionPane update: name.		scrollBar show]	frame flash]\gb14B164i82I493i34u5U24I163i54Iexecute: para for: pane	[pane execute: para in: false to: nil]\gb25BThingLab protocol\f5bgblt: str to: pt extent: extent   "show a bitstring"	[(Rectangle new origin: pt+frame origin extent: extent)		bitsFromString: str mode: oring clippedBy: frame]\gb33Bi18Icursorloc_pt	[user cursorloc_frame origin+pt]\gb14Bflash [frame flash]\gb6BputFloat: x center: center decimalPlaces: d		 | s int chars i length decimalPoint y	["print x with d digits after the decimal point"	y_x abs*(10.0 ipow: d)+0.5.	y>32767		["number too large for this hack"		self putFloat: x center: center digits: d+1]	int_y asInteger.	chars_int asString.  length_chars length.	[lengthd		[chars_('0000000000'(1 to: d-length+1)) + chars.		length_chars length]].	decimalPoint_length-d.  chars_chars+'0000000000'.	"omit the minus sign for negative numbers such that		only zeros will show"	s_Stream default.  [x<0.0 and int>0[s append: '']].	for i to: decimalPoint do [s next_charsi].	s append: '.'.	for i from: decimalPoint+1 to: length do [s next_charsi].	self putString: s contents center: center]\gb47B41i13u1U31I45i30I251i75IputFloat: x center: center digits: d | s	["print x with d digits in all"	s_Stream default.	x printon: s digits: d.	self putString: s contents center: center]\gb37B7i28IputString: str center: center	[text put: str at: frame origin+center centered: true clippedBy: frame]\gb31BscreenRectOf: rect   "translate a rectangle to screen coords"	[(Rectangle new origin: rect origin+frame origin 		corner: rect corner+frame origin) intersect: frame]\gb21Bi40IshowParagraph: para	["make a new textEditor if necessary"	[textEditornil[textEditor_CodePane init.		textEditor from: self; frame_frame]].	textEditor showing: para]\gb21B2i34IshowParagraph: para frame: f linesOff: linesOff 		| screenFrame wind scrollFrame	["show the paragraph para in frame f, with the first linesOff lines 		scrolled off"	screenFrame_f+frame origin.	screenFrame clear: white.	wind_screenFrame intersect: frame.	scrollFrame_screenFrame inset: 2.	scrollFrame origin y _ scrollFrame origin y - (linesOff*text lineheight).	text para: para asParagraph frame: scrollFrame; showin: wind]\gb51B34i19u4U10u1U17u8U22IstartupTool | carrier toolClass tool	[textEditornil		[carrier_owner toolPane currentObject recopy.		toolClass_owner actionPane toolClass.		carriernil or toolClassnil[]		tool_toolClass new carrier: carrier window: owner.		tool startup]	"tool not used in text editing mode"]\gb12B238i34I\gSystemOrganization classify: PicturePane under: 'ThingLab Windows'.\gPicturePane classInit\g"ThingLabWindow"l15000z20000\f5bgClass new title: 'ThingLabWindow'	subclassof: PanedWindow	fields: 'buffer  "a picture pane for buffering"		useBuffer  "true if buffer should be used" '	declare: 'stdTemplates ';	asFollows\f5bgI am a five-paned ThingLab browsing window\igInitialization\f5bgclassInit   "ThingLabWindow classInit"	[stdTemplates _ (00 rect: 912), (90 rect: 1812),		(180 rect: 2712), (270 rect: 3612),		(012 rect: 3636)]\gb12Bdefault  "create a five-paned ThingLab browsing window"		| selectionPane formatPane actionPane toolPane picturePane	["Create the panes"	selectionPane_LabSelectionPane new.  formatPane_FormatPane new.	actionPane_ActionPane new.  toolPane_ToolSelectionPane new.	picturePane_PicturePane new.	buffer_PicturePane init.  "other inits handled by title: with: at: message"	"Acquire them"	self title: 'ThingLab'		with: (selectionPane, formatPane, actionPane, toolPane, picturePane)		at: stdTemplates.	self newframe; show.	"Interconnect them"	selectionPane owner: self.  formatPane owner: self.	actionPane owner: self.  toolPane owner: self.	picturePane owner: self.  buffer owner: self.	"Display them"	selectionPane update]\gb9B1i44I66i16I186i47I4i12I141i17I152i12IWindow protocol\f5bgclose	[super close.  buffer close]\gb7Benter 	[self setDisplayHeight.  super enter]\gb8Berase	[buffer frame clear.  super erase]\gb7Bframe: f  "aquire a new frame; check buffer"		| pictureFrame pictureExtent screenCorner	[super frame: f.	"use double buffering if there is room for the buffer 		at the bottom of the screen"	pictureFrame_self picturePane frame.	pictureExtent_pictureFrame extent.	screenCorner_user screenrect corner.	pictureFrame corner y+pictureExtent yscreenCorner y		[useBuffer_true.		buffer frame_screenCorner-pictureExtent rect: screenCorner]	useBuffer_false]\gb10B1i32I66i83Ileave	[super leave.	useBuffer[buffer frame clear. user restoredisplay]]\gb7BThingLab protocol\f5bgactionPane [panes3]\gb11Bbuffer	[useBuffer[buffer] self picturePane]\gb8BcopyFromBuffer	["If double buffering was used, copy the bits from the buffer		to the picture pane"	useBuffer[buffer frame blt: self picturePane frame origin mode: storing]]\gb16B2i81IcopyToBuffer	["If double buffering is used, copy the bits from the picture pane		to the buffer"	useBuffer[self picturePane frame blt: buffer frame origin mode: storing]]\gb14B2i80IformatPane [panes2]\gb11BpicturePane [panes5]\gb12BselectionPane [panes1]\gb14BsetDisplayHeight  "if double buffering is used, hide the buffer"	[useBuffer[mem067_self picturePane frame corner y/2+2]]\gb18B1i44IshowBuffered	[useBuffer[buffer show. self copyFromBuffer]	self picturePane show]\gb14BtoolPane [panes4]\gb9B\gSystemOrganization classify: ThingLabWindow under: 'ThingLab Windows'.\gThingLabWindow classInit\g"ThingListPane"l15000z20000\f5bgClass new title: 'ThingListPane'	subclassof: ListPane	fields: 'owner myPrototypeNames'	declare: '';	asFollows\f5bgI am a list pane that displays all the ThingLab prototypes in the system\igInitialization\f5bgnames [Things contents sort]\gb6Bowner: owner\gbupdate	[myPrototypeNames_user classNames.	self disabled[self of: ()]	self of: self names]\gb8Bupdate: newsel	[myPrototypeNames_user classNames.	self disabled[self of: ()]	self revise: self names with: newsel]\gb16BWindow protocol\f5bgenter		["be sure I am up to date"	 [myPrototypeNamesuser classNames[]		window outline. self update].	super enter]\gb8B2i23IListPane protocol\f5bgclose [owner_nil.  super close]\gb6Bselected	[NormalCursor topage1.	user waitnobug  "to prevent re-selecting on same bug"]\gb10B41i35IThingLab protocol\f5bgcurrentName	[selection=0[nil]	listselection]\gb13BcurrentObject	[selection=0[nil]	Things(listselection)]\gb15Bdisabled [false]\gb9B\gSystemOrganization classify: ThingListPane under: 'ThingLab Windows'.\g"LabSelectionPane"l15000z20000\f5bgClass new title: 'LabSelectionPane'	subclassof: ThingListPane	fields: ''	declare: 'selectionMenu ';	asFollows\f5bgI am a list pane that displays all the ThingLab prototypes in the system, and am used to select the object to be shown in a ThingLab browser.\igInitialization\f5bgclassInit	[selectionMenu_Menu new string: 'filout']\gb11BWindow protocol\f5bgyellowbug | obj	[obj_self currentObject.	objnil[window flash]	scrollBar hidewhile		[selectionMenu bug=1[obj filoutPreferred]]]\gb10BListPane protocol\f5bgdeselected [self selected]\gb11Bselected	[owner picturePane update.  owner buffer update.  owner formatPane update.	"the formatPane will tell the action and tool panes to update,		and the picturePane to show"]\gb10B77i91I\gSystemOrganization classify: LabSelectionPane under: 'ThingLab Windows'.\gLabSelectionPane classInit\g"ToolSelectionPane"l15000z20000\f5bgClass new title: 'ToolSelectionPane'	subclassof: ThingListPane	fields: ''	declare: '';	asFollows\f5bgThis class has not yet been commented\igThingLab protocol\f5bgdisabled | sel	[sel_owner formatPane showSelector.	selshowprototypespicture: [false]	true]\gb9Bnames [owner selectionPane currentObject usefulClasses]\gb6B\gSystemOrganization classify: ToolSelectionPane under: 'ThingLab Windows'.\g