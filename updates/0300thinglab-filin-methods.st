Class understands: 'asFollows | s heading selector p [	selfself realself[self realself asFollows]	heading _ ''As yet unclassified''.	"handles Bravo or Press (Smalltalk generated) files"	while ((p _ FilinSource nextParagraph) and (s _ p text)  ''' + 30 inString + ''') do [		[s1 = 015 [			"throw away initial cr before comment and headings"			s _ s copy: 2 to: s length]].		p runs2			= 2 "italic" [self organization globalComment _ s];			= 0121 "5, bold" [heading _ s]		self canunderstand: (			selector _ self understands: p classified: heading) [				user show: selector; space. messagedict purge: selector]		user show: ''(an uncompiled method) '']]' classified: 'class name'Stream understands: 'nextParagraph | p controlSequence s	[s _ self upto: 26.	[self  92  [controlSequence _ self upto: 13]].	"ignore control sequence for now"	p _ Paragraph new text: s.	"control sequence of f5bg indicates a new category"	[controlSequence = ''f5bg''  [p allFont: 5; allBold]].	p]' classified: 'nonhomogeneous accessing'UserView understands: 'filin: filename | file chunk result	[file _ self fileString: filename.	file  nil  [self cr; show: filename + '' is absent.''. nil]	self cr; show: ''Reading '' + filename.	file _ file asStream.	until file end do		[chunk _ file upto: 30.		[file peek = 26 			[file skipTo: ''\''  1.			file skipTo: ''g''  1.			file  13]].		FilinSource _ file.		result _ nil  chunk. "eval chunk"		[result is: String  [self space; show: result] self show: ''.'']].	self show: '' <eof>''; cr.	FilinSource _ nil]' classified: 'as yet unclassified'Stream derstands: 'nextControl' unique.