'From Smalltalk 5.4hXM on 23 July 1979 at 4:08:06 pm.'\g"Depictor"l15000z20000\f5bgClass new title: 'Depictor'	subclassof: Object	fields: 'frame		turtle   "a turtle that lives in my frame"		strm   "a stream for accumulating a paragraph to be shown" '	declare: 'text ';	asFollows\f5bgA ThingLab object can show itself through me.\igInitialization\f5bgclassInit	[text_Textframe new para: '' asParagraph frame: (00 rect: 100100)]\gb11BAccess to parts\f5bgasStream [strm]\gb9BasTurtle [turtle]\gb9BShowing\f5bgshow: object frame: frame selector: selector	[turtle_Turtle init frame: frame.	strm_IndentingStream default.	frame clear: white.	object perform: selector with: self.	strm empty[]	self showParagraph: strm contents asParagraph]\gb46BThingLab Window Protocol\f5bgblt: str to: pt extent: extent   "show a bitstring"	[(Rectangle new origin: pt+frame origin extent: extent)		bitsFromString: str mode: oring clippedBy: frame]\gb33Bi18Icursorloc_pt	[user cursorloc_frame origin+pt]\gb14Bflash [frame flash]\gb6BputFloat: x center: center decimalPlaces: d		 | s int chars i length decimalPoint y	["print x with d digits after the decimal point"	y_x abs*(10.0 ipow: d)+0.5.	y>32767		["number too large for this hack"		self putFloat: x center: center digits: d+1]	int_y asInteger.	chars_int asString.  length_chars length.	[lengthd		[chars_('0000000000'(1 to: d-length+1)) + chars.		length_chars length]].	decimalPoint_length-d.  chars_chars+'0000000000'.	"omit the minus sign for negative numbers such that		only zeros will show"	s_Stream default.  [x<0.0 and int>0[s append: '']].	for i to: decimalPoint do [s next_charsi].	s append: '.'.	for i from: decimalPoint+1 to: length do [s next_charsi].	self putString: s contents center: center]\gb47B41i13u1U31I45i30I251i75IputFloat: x center: center digits: d | s	["print x with d digits in all"	s_Stream default.	x printon: s digits: d.	self putString: s contents center: center]\gb37B7i28IputString: str center: center	[text put: str at: frame origin+center centered: true clippedBy: frame]\gb31BscreenRectOf: rect   "translate a rectangle to screen coords"	[(Rectangle new origin: rect origin+frame origin 		corner: rect corner+frame origin) intersect: frame]\gb21Bi40IshowParagraph: para	[text para: para asParagraph frame: frame; showin: frame]\gb21BshowParagraph: para frame: f linesOff: linesOff 		| screenFrame wind scrollFrame	["show the paragraph para in frame f, with the first linesOff lines 		scrolled off"	screenFrame_f+frame origin.	screenFrame clear: white.	wind_screenFrame intersect: frame.	scrollFrame_screenFrame inset: 2.	scrollFrame origin y _ scrollFrame origin y - (linesOff*text lineheight).	text para: para asParagraph frame: scrollFrame; showin: wind]\gb51B34i19u4U10u1U17u8U22I\gSystemOrganization classify: Depictor under: 'ThingLab Graphics'.\gDepictor classInit\g"Line"l15000z20000\f5bgClass new title: 'Line'	subclassof: Object	fields: 'point1 point2'	declare: 'fieldproperties fieldProperties methods instancePathsDict inserters properties merges formats prototype constraints ';	asFollows\f5bgThis class has not yet been commented\igAccess to Parts\f5bgpoint1 [point1]\gb7Bpoint1: point1\gbpoint1: point1 point2: point2\gbpoint1_temp [point1 copyFrom: temp]\gb12Bpoint2 [point2]\gb7Bpoint2: point2\gbpoint2_temp [point2 copyFrom: temp]\gb12BShowing\f5bgdisplayat: pt effect: effect clippedBy: clipRect | t	[t_Turtle init frame: clipRect.	 t effect: effect; place: pt+point1-clipRect origin;		goto: pt+point2-clipRect origin]\gb49Bprinton: strm	[strm print: point1; append: ' line: '; print: point2]\gb15Bshowpicture: window 	[window asTurtle place: point1; width: 1; goto: point2]\gb22BEditing\f5bgattachers [point1 , point2]\gb10BframeOrNil	[(point1 min: point2)-1 rect: (point1 max: point2)+1]\gb12Bhas: pt  "return true if pt is near my center"	[point1+point2 /2 has: pt]\gb9B1i15u2U18Ilocation [point1+point2 / 2]\gb9BArithmetic\f5bgdistance: pt  "return the shortest distance from me to pt"	["this method takes care of the case of points near me as a LineEquation,		but outside my endpoints.  See LineEquation distance: for a		cheaper method"	(self pointNearest: pt) distance: pt]\gb14B1i42I5i105u22U23Ilength [point1 distance: point2]\gb7BpointNearest: pt | n	[n_self asLineEquation pointNearest: pt.	"insist that n be on me as a segment"	(n max: (point1 min: point2)) min: (point1 max: point2)]\gb17B48i12u1U22IConversions\f5bgasLineEquation | A B	[A_point2 y asFloat-point1 y asFloat.	B_point1 x asFloat-point2 x asFloat.	LineEquation new A: A B: B through: point1]\gb15BMoving\f5bgmoveby: delta 	[ "forwards code" self point1 moveby: delta .self point2 moveby: delta . "circular code"  "backwards code"  "checks" ]\gb16BmoveInserter2: delta 	[ "forwards code"  "dummy message: self point1 fixed. " self point2 moveby: delta . "circular code"  "backwards code"  "checks" ]\gb23BFilout\f5bgcanFiloutContents [true]\gb18BcontentsCodeTo: strm prefix: prefix	[prefix codeTo: strm.	strm append: ' copyFrom: ('; print: self; append: ').'; cr]\gb37BclassInit\f5bgclassInit	[Line prototype parts: 'point1 point2';		point1: 3030 point2: 5020;		inserters: 'point1', 'point2']\gb11B\gSystemOrganization classify: Line under: 'ThingLab Graphics'.\gLine classInit\g"LineEquation"l15000z20000\f5bgClass new title: 'LineEquation'	subclassof: Object	fields: 'A B C'	declare: '';	asFollows\f5bgline equation: A*x + B*y + C = 0\igInitialization\f5bgA: A B: B C: C | t	["general form: A*x + B*y + C = 0	normalize coefficients"	t _ ((A*A) + (B*B)) sqrt.	A _ A/t. B _ B/t. C _ C/t]\gb15B7i55IA: A B: B through: p	[self A: A B: B C: ((A*p x) + (B*p y)) neg]\gb22Bpoint: p slope: A  [	"point-slope form: y-y1 = A*(x-x1)"	self A: A B: 1.0 through: p]\gb19B4i33Islope: A intercept: C [	"slope-intercept form: y = A*x + C"	self A: A B: 1.0 C: C]\gb22B4i33IAccess to Parts\f5bgA [A]\gb2BB [B]\gb2BC [C]\gb2BArithmetic\f5bgdistance: p	["distance from a line to a point"	(C + (A*p x) + (B*p y)) abs]\gb13B2i31Iintersect: L  "return my intersection with another LineEquation"		| t1 t2	[t1 _ [B=0 [(A * L C) - (C * L A)]		(C * L B) - (B * L C)].	t2 _ (B * L A) - (A * L B).	t2 = 0[user notify: 'lines are parallel']	B=0.0 [self pointAtY: t1/t2]	self pointAtX: t1/t2]\gb14B1i48Iparallel: p	[LineEquation new A: A B: B through: p]\gb13Bperpendicular: p	[LineEquation new A: [A=0.0 [B neg] B] B: A neg through: p]\gb18BpointAtX: x  "return the point on me with x value = x"	[B=0.0 [user notify: 'undefined']	x round  (C + (A * x) / B neg) round]\gb13B1i39IpointAtY: y  "return the point on me with y value = y"	[A=0.0 [user notify: 'undefined']	(C + (B * y) / A neg) round  y round]\gb13B1i39IpointNearest: pt  "return the point on me nearest pt"	[self intersect: (self perpendicular: pt)]\gb18B1i31u2IUreflect: pt  "return the reflection of pt about me"	[(self nearest: pt)-pt*2+pt]\gb13B1i25u2U9I\gSystemOrganization classify: LineEquation under: 'ThingLab Graphics'.\g"TextThing"l15000z20000\f5bgClass new title: 'TextThing'	subclassof: Object	fields: 'frame para leftInset rightInset topInset bottomInset'	declare: 'myTextFrame fieldProperties methods instancePathsDict inserters constrainers merges formats prototype constraints ';	asFollows\f5bgThis class has not yet been commented\igInitialization\f5bgclassInit | p	[p_self class prototype.	p  parts: 'frame para'; primitives: 'leftInset rightInset topInset bottomInset'.	p frame: (1010 rect: 8726); para: 'a TextThing' asParagraph;		leftInset: 2; rightInset: 2; topInset: 2; bottomInset: 1000.	p inserters: 'frame origin', 'frame corner'.	p constrainers: 'frame' inVector.	myTextFrame_Textframe new]\gb10BAccess to Parts\f5bgbottomInset [bottomInset]\gb12BbottomInset: bottomInset\gbbottomInset_bottomInset\gbframe [frame]\gb6Bframe: frame\gbframe_temp [frame copyFrom: temp]\gb11BleftInset [leftInset]\gb10BleftInset: leftInset\gbleftInset_leftInset\gbpara [para]\gb5Bpara: para\gbpara_temp [para copyFrom: temp]\gb10BrightInset [rightInset]\gb11BrightInset: rightInset\gbrightInset_rightInset\gbtopInset [topInset]\gb9BtopInset: topInset\gbtopInset_topInset\gbConversion\f5bgasTextFrameIn: window | offset f w	[offset_window frame origin.	f_Rectangle new origin: offset+frame origin+(leftInsettopInset)		corner: offset+frame corner-(rightInsetbottomInset).	w_frame+offset intersect: window frame.	Textframe new para: para frame: f window: w]\gb22BShowing\f5bgdisplayat: offset effect: effect clippedBy: clipRect | f w	[f_Rectangle new origin: offset+frame origin+(leftInsettopInset)		corner: offset+frame corner-(rightInsetbottomInset).	w_frame+offset intersect: clipRect.	w clear: white.	myTextFrame para: para frame: f window: w; show]\gb53Bshowlabel: window | offset f w	[offset_window frame origin.	f_Rectangle new origin: offset+frame origin+(leftInsettopInset)		corner: offset+frame corner-(rightInsetbottomInset).	w_frame+offset intersect: window frame.	w clear: white.	myTextFrame para: para frame: f window: w; show]\gb18Bshowpicture: window\gbAs yet unclassified\f5bgmoveby: delta 	[ "forwards code" self frame origin moveby: delta .self frame corner moveby: delta . "circular code"  "backwards code"  "checks" ]\gb16BmoveInserter2: delta 	[ "forwards code"  "dummy message: self frame origin fixed. " self frame corner moveby: delta . "circular code"  "backwards code"  "checks" ]\gb23B\gSystemOrganization classify: TextThing under: 'ThingLab Graphics'.\gTextThing classInit\g