'From Smalltalk 5.4hXM on 23 July 1979 at 4:01:24 pm.'\g"Method"l15000z20000\f5bgClass new title: 'Method'	subclassof: Object	fields: 'keywords  "vector of keywords (strings)"		arguments  "vector of argument names (strings)"		selector  "a unique string"		temps  "vector of names of temporaries"		body  "main body of method (a string)" '	declare: '';	asFollows\f5bgThis class formalizes the notion of a Smalltalk method.\igInitialization\f5bgfromString: body   "handles the simple case"	[keywords_arguments_temps_Vector new: 0]\gb19Bi25Ikeywords: keywords arguments: arguments temps: temps body: body\gbAccess to parts\f5bgarguments [arguments]\gb10Barguments_arguments\gbbody [body]\gb5Bbody_body\gbkeywords [keywords]\gb9Bkeywords_keywords\gbselector | strm n	[nilselector		[strm_Stream default.		for n from: keywords do			[strm append: n].		selector_strm contents unique]	selector]\gb9Btemps [temps]\gb6Btemps_temps\gbCompiling\f5bgcompileIn: object | strm i	[strm_Stream default.	[arguments length=0[strm append: keywords1; space]	for i to: keywords length do		[strm append: keywordsi; space; append: argumentsi; space]].	[temps length>0		[strm append: '| '.		for i to: temps length do [strm append: tempsi; space]]].	strm cr; tab; append: '['; append: body; append: ']'.	selector_object class understands: strm contents]\gb18BuncompileIn: object	[object class derstands: selector]\gb21BShowing\f5bgprintproperty: strm | i	[strm cr.	[arguments length=0[strm append: keywords1; space]	for i to: keywords length do		[strm append: keywordsi; space; append: argumentsi; space]].	[temps length>0		[strm append: '| '.		for i to: temps length do [strm append: tempsi; space]]].	strm indent; cr; append: '['; append: body; append: ']'; unindent]\gb20B\gSystemOrganization classify: Method under: 'ThingLab Properties'.\g"Property"l15000z20000\f5bgClass new title: 'Property'	subclassof: Object	fields: 'name'	declare: 'formats prototype merges ';	asFollows\f5bgI am the superclass for properties.  I have a name, which will be used to index me in my owner table of properties, and which may be used in constructing the selector for the messages I compile.\igAccess to parts\f5bgname [name]\gb5Bname: name\gbCategorization\f5bgcategoryClass  "return the class to use in making a category for me"	[PropertyTable]\gb15B1i51IcategoryName ['Unclassified Properties']\gb13BInsertion & Deletion\f5bgdeleteFrom: prototype | category  "delete myself from prototype"	[category_prototype category: self categoryName class: self categoryClass.	category delete: name entry: self]\gb22B13i19u9IUdeleteFrom: prototype ifOverlaps: path	[self overlaps: path[self deleteFrom: prototype]]\gb40BinsertIn: prototype | category old  "insert myself in prototype"	[category_prototype category: self categoryName class: self categoryClass.	"delete the old property if there is one"	[old_category lookup: name[old deleteFrom: prototype]].	category insert: name with: self]\gb20B17i17u9IU80i39ITests\f5bgoverlaps: path [false]\gb15BPrinting\f5bgprintNameOn: strm	[name is: Integer[strm append: 'part'; print: name]	strm append: name]\gb19Bprintproperty: strm [self printNameOn: strm]\gb20BsquishedName | strm char  "name with all blanks removed"	[strm_Stream default.	name is: Integer		[self printNameOn: strm.  strm contents]	for char from: name do [char=040[]  strm next_char].	strm contents]\gb13B14i28I\gSystemOrganization classify: Property under: 'ThingLab Properties'.\g"Field"l15000z20000\f5bgClass new title: 'Field'	subclassof: Property	fields: 'index  "my index in my owners instance fields"		type  "an atom indicating the type of object that can be in			my instance field - is either part, primitive, reference,			superclass, or spare"		named  "true iff access messages should be compiled.  These will be			of the form name and name_ "		spare1 '	declare: 'prototype merges ';	asFollows\f5bgI describe an instance field of a prototype and its copies\igAccess to parts\f5bgindex [index]\gb6Bname: name index: index type: type named: named\gbnamed [named]\gb6Bnamed_named\gbtype [type]\gb5Btype_type\gbConversions\f5bgasPath	[AccessPath new names: self pathName inVector]\gb8BpathName  "return the preferred name for accessing me"	[named[name]  index]\gb10B1i42IShowing\f5bgprintfield: strm field: field	[type=spare[]	strm cr.  self printNameOn: strm.  strm append: ': '.	type=part[field printtableoffields: strm]	field printon: strm]\gb31Bprintfieldstructure: strm field: field | title	[type=spare[]	strm cr.  self printNameOn: strm.	title_field class title.	strm append: ['AEIOU' has: title1[': an '] ': a '].	strm append: title]\gb39BCompiling\f5bgcompileIn: prototype	[user notify: 'should be defined by subclass']\gb22BdeleteFrom: prototype	[type_spare.	self uncompileIn: prototype]\gb23BinsertIn: prototype	[prototype fieldPropertiesindex _ self.	self compileIn: prototype]\gb21BuncompileIn: prototype	[namedfalse or type=spare[]	prototype class derstands: name unique;		derstands: (name+'_') unique]\gb24BRelative References\f5bgrelocatePathFor: obj prefix: p	["default is no-op - RelativeReference will overrride this"]\gb32B2i56IFilout\f5bgcontentsCodeTo: strm prefix: prefix for: owner | path contents	["append code to change the contents of my field to the that of my owner"	path_prefix concat: self asPath.	contents_owner instfield: index.	typepart		[contents contentsCodeTo: strm prefix: path]	typeprimitive		[path codeTo: strm.		strm append: '_'.		contents primitiveCodeTo: strm.		strm append: '.'; cr]	"type=reference not handled yet - field is left nil"]\gb47B19i70I250i51IcontentsCodeTo: printer prefix: prefix owner: owner | strm path contents	["append code to change the contents of my field to the that of my owner"	path_prefix concat: self asPath.	contents_path applyTo: owner.	typepart		[contents contentsCodeTo: printer prefix: path owner: owner]	typeprimitive		[strm_Stream default.		path codeTo: strm context: owner class title+' prototype'.		strm append: '_'.		contents primitiveCodeTo: strm.		strm append: '.'.		printer print: strm contents asParagraph]	"type=reference not handled yet - field is left nil"]\gb52B24i70I367i51IinitCodeTo: printer for: owner | strm	["append code to initialize my owner's instance field to a copy of 		the appropriate prototype"	strm_Stream default.	typepart		[strm append: owner class title; append: ' prototype field: ';			append: name; append: ' replaceWith: ';		append: (owner instfield: index) class title;		append: ' prototype recopy.'.		printer print: strm contents asParagraph]	"If type is primitive or reference, then code for init'ing contents 		will take care of 		putting a value in the field.  If type is spare, then the field should		remain nil."]\gb31B10i93I273i177I\gSystemOrganization classify: Field under: 'ThingLab Properties'.\g"AbsoluteReference"l15000z20000\f5bgClass new title: 'AbsoluteReference'	subclassof: Field	fields: ''	declare: '';	asFollows\f5bgThis class has not yet been commented\igAs yet unclassified\f5bgcompileIn: prototype | class code	[class_prototype class.  code_Stream default.	"compile an access method"	code append: name; append: ' ['; append: name; append: ' globalRef]'.	class understands: code contents classified: 'Access to Parts'.	"compile a copyFrom method"	code reset; append: name; append: '_temp ['; append: name;			append: ' globalRef copyFrom: temp]'.		class understands: code contents classified: 'Access to Parts']\gb21B62i24I141i25I\gSystemOrganization classify: AbsoluteReference under: 'ThingLab Properties'.\g"MethodDefinition"l15000z20000\f5bgClass new title: 'MethodDefinition'	subclassof: Property	fields: 'method'	declare: 'prototype ';	asFollows\f5bgMethod defining properties can be inherited, and cannot be written into.  The instance field method is the source code for this property.\igMisc\f5bgcategoryName ['Method Definitions']\gb13BdeleteFrom: prototype	[super deleteFrom: prototype.	method uncompileIn: prototype]\gb23BfromString: s	[method_Method new fromString: s.	method keywords_self squishedName inVector]\gb15BinsertIn: prototype	[super insertIn: prototype.	method compileIn: prototype]\gb21Bmethod [method]\gb7Bmethod _ method\gbprintproperty: strm	[method printproperty: strm]\gb21B\gSystemOrganization classify: MethodDefinition under: 'ThingLab Properties'.\g"PartDescription"l15000z20000\f5bgClass new title: 'PartDescription'	subclassof: Field	fields: ''	declare: 'merges ';	asFollows\f5bgThis class has not yet been commented\igAs yet unclassified\f5bgcompileIn: prototype | class code	["compile access code if I am named and not spare"	namedfalse or type=spare[]	class_prototype class.  code_Stream default.	"compile an access method"	code append: name; append: ' ['; append: name; append: ']'.	class understands: code contents classified: 'Access to Parts'.	"compile a copyFrom method"	type=part or type=superclass		[code reset; append: name; append: '_temp ['; append: name;			append: ' copyFrom: temp]'.		class understands: code contents classified: 'Access to Parts']	type=primitive		[code reset; append: name; append: '_'; append: name.		class understands: code contents classified: 'Access to Parts']	user notify: 'unknown type']\gb21B16i47I\gSystemOrganization classify: PartDescription under: 'ThingLab Properties'.\g"Picture"l15000z20000\f5bgClass new title: 'Picture'	subclassof: MethodDefinition	fields: 'bits origin offset extent'	declare: 'properties prototype ';	asFollows\f5bgA Picture provides a way of presenting an object to the user.  For bit map pictures, bits is a string of bits, originPath is a filter for getting to the origin (a point that is a property of the owner), offset is the offset of the rectangle for bits from the originPath point, extent is that rectangle's extent.\igInitialization\f5bgbitsFromBytes: str | strm byte   "initialize bits from a string of octal bytes"	[strm_Stream default.	for byte from: str asVector do [strm next_byte].	bits_strm contents]\gb19B14i46IfromString: s 	[super fromString: s.	method keywords_('show'+self squishedName+':') inVector;		arguments_(window)]\gb16BinitBitAndSuperMethod   "like initBitMethod, but also calls inherited method"		| pName strm	[method_Method new.	method keywords_('showpicture:'); arguments_('window');		temps_().	strm_ Stream default.	"offset and extent are class vars - stored as Smalltalk points"	strm append: 'super showpicture: window.  window blt: bits to: offset+'.	[origin is: AccessPath		[strm append: 'self '.		for pName from: origin names do [strm append: pName; space]]	strm print: origin].	strm append: ' extent: extent'.	method body_strm contents]\gb24Bi53bI2B131i63IinitBitMethod   "set up method to do a simple bit map picture"		| pName strm	[method_Method new.	method keywords_('showpicture:'); arguments_('window');		temps_().	strm_ Stream default.	"offset and extent are class vars - stored as Smalltalk points"	strm append: 'window blt: bits to: offset+'.	[origin is: AccessPath		[strm append: 'self '.		for pName from: origin names do [strm append: pName; space]]	strm print: origin].	strm append: ' extent: extent'.	method body_strm contents]\gb16Bi46bI2B131i63IAccess to parts\f5bgbits [bits]\gb5Bbits_bits\gbextent [extent]\gb7Bextent_extent\gboffset [offset]\gb7Boffset_offset\gborigin [origin]\gb7Borigin_origin\gbCompiling\f5bgcategoryName ['Pictures']\gb13BinsertIn: prototype	[ [nilbits[] 	  prototype class classvars declare: bits as: bits;		declare: offset as: offset;		declare: extent as: extent].	super insertIn: prototype]\gb21B\gSystemOrganization classify: Picture under: 'ThingLab Properties'.\g"PropertyTable"l15000z20000\f5bgClass new title: 'PropertyTable'	subclassof: Property	fields: 'table'	declare: '';	asFollows\f5bgThis class has not yet been commented\igMisc\f5bg n [tablen]\gb4BcategoryName ['Properties']\gb13Bcontents [table contents]\gb9Bdelete: n entry: entry [table delete: n]\gb23BdeleteFrom: prototype ifOverlaps: path | n	[for n from: self contents do		[selfn deleteFrom: prototype ifOverlaps: path].	selfprototype properties["delete me not"]	self empty[self deleteFrom: prototype]]\gb39B117i13Iempty [self contents length=0]\gb6Binit [table_Dictionary init]\gb5Binsert: n with: value [table insert: n with: value]\gb22Blookup: n [table lookup: n]\gb10Bprintproperty: strm | n	[strm cr.  self printNameOn: strm.  strm indent.	for n from: self contents do		[selfn printproperty: strm].	strm unindent]\gb20Bprinttableoffields: strm | n	[strm cr.  self printNameOn: strm.  strm indent.	for n from: self contents do		[selfn printtableoffields: strm].	strm unindent]\gb25B\gSystemOrganization classify: PropertyTable under: 'ThingLab Properties'.\g"MergeTable"l15000z20000\f5bgClass new title: 'MergeTable'	subclassof: PropertyTable	fields: ''	declare: '';	asFollows\f5bgI own a hash set of merge constraints\igMisc\f5bg merge	[table findorerror: merge.	merge]\gb9Bdelete: n entry: entry [table delete: entry]\gb23Binit [table_HashSet init]\gb5Binsert: n with: value [table insert: value]\gb22Blookup: merge	[(merge is: MergeConstraint) and (table find: merge)[merge]	false]\gb15B\gSystemOrganization classify: MergeTable under: 'ThingLab Properties'.\g"RelativeReference"l15000z20000\f5bgClass new title: 'RelativeReference'	subclassof: Field	fields: ''	declare: '';	asFollows\f5bgThis class has not yet been commented\igAs yet unclassified\f5bgcompileIn: prototype | class code	[class_prototype class.  code_Stream default.	"compile an access method"	code append: name; append: ' ['; append: name; append: ' relativeRef]'.	class understands: code contents classified: 'Access to Parts'.	"compile a copyFrom method"	code reset; append: name; append: '_temp ['; append: name;			append: ' relativeRef copyFrom: temp]'.		class understands: code contents classified: 'Access to Parts']\gb21BrelocatePathFor: obj prefix: prefix	["prefix the path in my field with prefix"	obj instfield: index _ (prefix concat: (obj instfield: index))]\gb37B2i33u6IU\gSystemOrganization classify: RelativeReference under: 'ThingLab Properties'.\g"SuperclassDescription"l15000z20000\f5bgClass new title: 'SuperclassDescription'	subclassof: PartDescription	fields: ''	declare: '';	asFollows\f5bgThis class has not yet been commented\igAs yet unclassified\f5bg\gSystemOrganization classify: SuperclassDescription under: 'ThingLab Properties'.\g